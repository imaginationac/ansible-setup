---
- hosts: localhost
  name: autoprovision workstation configuration
  connection: local
  become: true

  pre_tasks:
    # Raspberry Pi OS does not have the `gh` package by default. Need to add signing key and repo
    - name: add github-cli repo signing key
      ansible.builtin.get_url:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        dest: /usr/share/keyrings/
        mode: g+r,o+r
      when: ansible_lsb['id'] == "Raspbian"

    - name: add github-cli repo
      ansible.builtin.apt_repository:
        repo: deb [arch=armhf signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main
        state: present
      when: ansible_lsb['id'] == "Raspbian"

    - name: update package cache on Debian-based distros
      ansible.builtin.apt:
        update_cache: true
        state: present
      when: ansible_facts['os_family'] == "Debian"

  tasks:
    - name: install packages
      ansible.builtin.package:
        name:
          - bat
          - exa
          - fzf
          - gh
          - mosh
          - neovim
          - python3-pip
          - ripgrep
          - tmux
          - zoxide
          - zsh
        state: present

    - name: change default shell to zsh
      user:
        name: dorian
        shell: /usr/bin/zsh
        state: present

    - name: check if oh-my-zsh is installed
      ansible.builtin.stat:
        path: /home/dorian/.oh-my-zsh
      register: stat_oh_my_zsh_result

    - name: clone oh-my-zsh
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh
        dest: /home/dorian/.oh-my-zsh
        version:
      when: not stat_oh_my_zsh_result.stat.exists
      become_user: dorian

    - name: copy zshrc
      ansible.builtin.copy:
        src: files/zshrc
        dest: /home/dorian/.zshrc
        owner: dorian
        group: dorian
        mode: u=rwx,g=rwx,o=rx

    - name: copy aliases
      ansible.builtin.copy:
        src: files/aliases
        dest: /home/dorian/.aliases
        owner: dorian
        group: dorian
        mode: u=rwx,g=rwx,o=rx

    - name: check if tmux-plugin-manager (tpm) is installed
      ansible.builtin.stat:
        path: /home/dorian/.tmux/plugins/tpm
      register: stat_tpm_result

    - name: install tmux-plugin-manager
      ansible.builtin.git:
        repo: https://github.com/tmux-plugins/tpm
        dest: /home/dorian/.tmux/plugins/tpm
      become_user: dorian
      when: not stat_tpm_result.stat.exists

    - name: copy tmux.conf
      ansible.builtin.copy:
        src: files/tmux.conf
        dest: /home/dorian/.tmux.conf
        owner: dorian
        group: dorian
        mode: u=rwx,g=rwx,o=rw

    # Neovim plugin/package manager
    # https://github.com/wbthomason/packer.nvim
    - name: clone packer.nvim
      ansible.builtin.git:
        repo: https://github.com/wbthomason/packer.nvim
        dest: /home/dorian/.local/share/nvim/site/pack/packer/start/packer.nvim
        version:
      become_user: dorian

    # TODO: Copy neovim configuration files
    - name: copy neovim configuration files
      ansible.builtin.copy:
        src: files/neovim/config/nvim
        dest: /home/dorian/.config
        owner: dorian
        group: dorian
        mode: u+rwx,g+rwx,o+rx

    - name: add ansible user
      user:
        name: ansible
        system: true

    - name: set up sudo for ansible user
      copy:
        src: files/sudoer_ansible
        dest: /etc/sudoers.d/ansible
        owner: root
        group: root
        mode: 0440

    - name: add ansible-pull cron job
      cron:
        name: ansible auto-provision
        user: ansible
        minute: "*/10"
        job: ansible-pull -o -U https://github.com/imaginationac/ansible-setup.git
